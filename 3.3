#include <stdio.h>
#include <stdlib.h>

void pyromid_formation(int *, int, int);
void pyromidal_sorting(int *, int);
int main()
{
  int arr[10];
  for (int i = 0; i<10; i++)
  {
    arr[i] = rand() % 20;
  }
  for (int i = 0; i<10; i++)
  {
    printf("%d ", arr[i]);
  }
  printf("\n");
  pyromidal_sorting(arr, 10);
  for (int i = 0; i<10; i++)
  {
    printf("%d ", arr[i]);
  }
  printf("\n");

  return 0;
}
void pyromidal_sorting(int *numbers, int arr_size) 
{
  for (int i = (arr_size / 2) - 1; i >= 0; i--)
  {
    pyromid_formation(numbers, i, arr_size - 1);
  }
  for (int i = arr_size - 1; i >= 1; i--)
  {
    int temp = numbers[0];
    numbers[0] = numbers[i];
    numbers[i] = temp;
    pyromid_formation(numbers, 0, i - 1);
  }

  return ;
}
void pyromid_formation(int *numbers, int root, int bottom)
{
  int maxChild;
  int exit = 0;
  while ((root * 2 <= bottom) && (exit != 1)) 
  {
    if (root * 2 == bottom)
    {
      maxChild = root * 2;
    }
    else if (numbers[root * 2] > numbers[root * 2 + 1])
    {
      maxChild = root * 2;
    }
    else
    {
      maxChild = root * 2 + 1;
    }
    if (numbers[root] < numbers[maxChild]) 
    {
      int temp = numbers[root];
      numbers[root] = numbers[maxChild];
      numbers[maxChild] = temp;
      root = maxChild;
    }
    else
    {
      exit = 1;
    }
  }

  return ;
}
